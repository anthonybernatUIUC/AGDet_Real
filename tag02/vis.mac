#
# Macro file for the initialization phase of "radioActiv.cc"
#
# Sets some default verbose
# and initializes the graphic.
#
/control/verbose 1
/run/verbose 1
#
/run/initialize
/run/reinitializeGeometry
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
#/vis/viewer/set/viewpointThetaPhi 90. 0.
#
# Specify zoom value:
#/vis/viewer/zoom 1.5
#
# Specify background color:
/vis/viewer/set/background 0 0 0
#
# Specify style (surface or wireframe):
#/vis/viewer/set/style wireframe
#
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 1 m
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/process/em/lowestElectronEnergy 10 eV
#/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set e+ blue
/vis/modeling/trajectories/drawByParticleID-0/set nu_e white
/vis/modeling/trajectories/drawByParticleID-0/set anti_nu_e white
/vis/modeling/trajectories/drawByParticleID-0/set geantino white
/vis/modeling/trajectories/drawByParticleID-0/set gamma green
/vis/modeling/trajectories/drawByParticleID-0/set alpha magenta
/vis/modeling/trajectories/drawByParticleID-0/set GenericIon grey
#/vis/modeling/trajectories/drawByParticleID-0/set neutron white
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# Make World Invisible and color geometry
/vis/geometry/set/visibility World 0 false
/vis/geometry/set/colour logicSiDet 0 0.29 0.57 0.46 		#Dark Green
/vis/geometry/set/colour logicGeDet 0 0 1 1		#Teal
#/vis/geometry/set/colour logicAl1 0 0 0 1 		#Blue
#/vis/geometry/set/colour logicAl2 0 0 0 1		#Blue
#/vis/geometry/set/colour logicIsoSphere 0 0 1 1		#Teal
#/vis/geometry/set/colour logicShield1 0 0.5 0.5 0.5	#Grey
#/vis/geometry/set/colour logicShield2 0 0.7 0.4 0.2	#Copper
#/vis/geometry/set/colour logicShield3 0 0.5 0.5 0.5	#Grey
#/vis/geometry/set/colour logicTargetCyl  0 0.35 0.2 0.1    #Brown
/vis/viewer/set/viewpointVector 0 1 1 cm

#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
#/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
